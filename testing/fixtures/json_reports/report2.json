[
  {
    "uri": "features/feature3.feature",
    "id": "i-am-some-other-feature-for-testing-some-broken-functionality",
    "keyword": "Feature",
    "name": "I am some other feature for testing some broken functionality",
    "description": "",
    "line": 1,
    "elements": [
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-failed-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some failed testing scenario of some functionality",
        "description": "",
        "line": 4,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 3
          },
          {
            "name": "@screenshot",
            "line": 3
          }
        ],
        "before": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 6347642000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 5,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 224000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 500247000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step which will fail",
            "line": 6,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:27"
            },
            "result": {
              "status": "failed",
              "error_message": "I am some error (RuntimeError)\n./features/step_definitions/sample_steps.rb:28:in `/^I am when step which will fail$/'\nfeatures/feature3.feature:6:in `When I am when step which will fail'",
              "duration": 406000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 7,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "skipped"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "embeddings": [
              {
                "mime_type": "image/png",
                "data": ""
              }
            ],
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 4087977000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-undefined-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some undefined testing scenario of some functionality",
        "description": "",
        "line": 10,
        "type": "scenario",
        "tags": [
          {
            "name": "@wip",
            "line": 9
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 45000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 11,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 44000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 502278000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 12,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 105000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 500187000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some undefined feature",
            "line": 13,
            "match": {
              "location": "features/feature3.feature:13"
            },
            "result": {
              "status": "undefined"
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 22000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-pending-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some pending testing scenario of some functionality",
        "description": "",
        "line": 16,
        "type": "scenario",
        "tags": [
          {
            "name": "@scenario",
            "line": 15
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 70000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 17,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 36000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 504916000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 18,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 122000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 500282000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some pending feature",
            "line": 19,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:23"
            },
            "result": {
              "status": "pending",
              "error_message": "TODO (Cucumber::Pending)\n./features/step_definitions/sample_steps.rb:24:in `/^I am then step of some pending feature$/'\nfeatures/feature3.feature:19:in `Then I am then step of some pending feature'",
              "duration": 415000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "skipped"
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 35000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some testing scenario of some functionality",
        "description": "",
        "line": 22,
        "type": "scenario",
        "tags": [
          {
            "name": "@high",
            "line": 21
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 50000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some feature",
            "line": 23,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 150000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 502723000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some feature",
            "line": 24,
            "output": [
              "$ ABC % XYZ £"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:5"
            },
            "result": {
              "status": "passed",
              "duration": 122000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 502490000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some feature",
            "line": 25,
            "embeddings": [
              {
                "mime_type": "text/plain",
                "data": "RW1iZWQgTGlua3x8fGh0dHA6Ly9yZXBvcnRidWlsZGVyLnJhamF0dGhhcmVqYS5jb20="
              }
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:9"
            },
            "result": {
              "status": "passed",
              "duration": 86000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 501658000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 24000
            }
          }
        ]
      },
      {
        "id": "i-am-some-other-feature-for-testing-some-broken-functionality;i-am-some-other-testing-scenario-of-some-functionality",
        "keyword": "Scenario",
        "name": "I am some other testing scenario of some functionality",
        "description": "",
        "line": 28,
        "type": "scenario",
        "tags": [
          {
            "name": "@low",
            "line": 27
          }
        ],
        "before": [
          {
            "match": {
              "location": "features/support/hooks.rb:1"
            },
            "result": {
              "status": "passed",
              "duration": 30000
            }
          }
        ],
        "steps": [
          {
            "keyword": "Given ",
            "name": "I am give step of some other feature",
            "line": 29,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:13"
            },
            "result": {
              "status": "passed",
              "duration": 25000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 502568000
                }
              }
            ]
          },
          {
            "keyword": "When ",
            "name": "I am when step of some other feature",
            "line": 30,
            "output": [
              "123"
            ],
            "match": {
              "location": "features/step_definitions/sample_steps.rb:16"
            },
            "result": {
              "status": "passed",
              "duration": 62000
            },
            "after": [
              {
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 500932000
                }
              }
            ]
          },
          {
            "keyword": "Then ",
            "name": "I am then step of some other feature",
            "line": 31,
            "match": {
              "location": "features/step_definitions/sample_steps.rb:20"
            },
            "result": {
              "status": "passed",
              "duration": 213000
            },
            "after": [
              {
                "embeddings": [
                  {
                    "mime_type": "text/html",
                    "data": "PGk+RW1iZWQgSFRNTDwvaT4="
                  }
                ],
                "match": {
                  "location": "features/support/hooks.rb:12"
                },
                "result": {
                  "status": "passed",
                  "duration": 505325000
                }
              }
            ]
          }
        ],
        "after": [
          {
            "match": {
              "location": "features/support/hooks.rb:17"
            },
            "result": {
              "status": "passed",
              "duration": 28000
            }
          }
        ]
      }
    ]
  }
]